{"version":3,"sources":["components/card/card.jsx","components/card-list/card-list.jsx","components/search-box/search-box.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","event","target","value","App","setState","searchText","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAGaA,EAAO,SAACC,GACjB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAI,KAChF,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,YCLjBC,EAAW,SAACR,GACrB,OACI,qBAAKC,UAAU,YAAf,SAEQD,EAAMS,SAASC,KAAI,SAAAP,GAAO,OACtB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCLzBO,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OACtB,uBACIZ,UAAU,SACVa,KAAK,SACLC,SAAU,SAAAC,GAAK,OAAEH,EAAaG,EAAMC,OAAOC,QAC3CN,YAAaA,MC6BNO,G,wDA7Bb,aAAc,IAAD,8BACX,gBAeFN,aAAe,SAAAP,GAAI,OAAI,EAAKc,SAAS,CAACC,WAAWf,KAd/C,EAAKgB,MAAQ,CACXb,SAAS,GACTY,WAAW,IAJF,E,qDAQb,WAAoB,IAAD,OACjBE,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJ,EAAKP,SAAS,CAACX,SAAWkB,S,oBAM9B,WAAS,IAAD,EAC4BC,KAAKN,MAA/Bb,EADF,EACEA,SAAWY,EADb,EACaA,WACbQ,EAAmBpB,EAASqB,QAAO,SAAA3B,GAAO,OAAIA,EAAQG,KAAKyB,cAAcC,SAASX,EAAWU,kBACnG,OACA,sBAAK9B,UAAU,MAAf,UACE,oDACA,cAAC,EAAD,CAAWW,YAAY,iBAAiBC,aAAce,KAAKf,eAC3D,cAAC,EAAD,CAAUJ,SAAUoB,W,GA3BRI,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.41e18535.chunk.js","sourcesContent":["import React from 'react'\nimport './card.css'\n\nexport const Card = (props) => {\n    return(    \n        <div className=\"card-container\">\n            <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt=\"\"/>\n            <h2>{props.monster.name}</h2>\n            <p>{props.monster.email}</p>\n\n        </div>    \n    )\n}","import React from 'react'\nimport './card-list.css'\nimport { Card } from './../card/card'\nexport const CardList = (props) => {\n    return(\n        <div className=\"card-list\">\n             {\n                props.monsters.map(monster=>\n                    <Card key={monster.id} monster={monster} />\n                )\n            }\n        </div>\n    )\n}","import React from 'react'\nimport './search-box.css'\n\n export const SearchBox = ({placeholder,handleChange}) =>(\n    <input\n        className=\"search\" \n        type=\"search\" \n        onChange={event=>handleChange(event.target.value)} \n        placeholder={placeholder}\n    />\n)","import React, { Component } from \"react\";\nimport {CardList} from './components/card-list/card-list'\nimport {SearchBox} from './components/search-box/search-box'\n\nimport './App.css';\n\nclass App extends Component{\n\n  constructor(){\n    super();\n    this.state = {\n      monsters:[],\n      searchText:\"\"\n    }\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => {\n      this.setState({monsters : users})\n    })\n  }\n\n  handleChange = name => this.setState({searchText:name})\n\n  render(){\n    const { monsters , searchText } = this.state\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchText.toLowerCase()))\n    return(\n    <div className=\"App\">\n      <h1>Monster Search Box</h1>\n      <SearchBox placeholder=\"search monster\" handleChange={this.handleChange} />\n      <CardList monsters={filteredMonsters} />      \n    </div>)\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}